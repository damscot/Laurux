' Gambas class file

Create Static

Public Struct elements
  nom As String       ''nom de la propriete
  propriete As Variant      '' propriété à appliquer
  frm As String           ''format de la propriété
End Struct

Private $elem As New Elements[]
Private $clef As String
Private $nom As String
Private $CondFilter As ObjProp
Private $filter As TextReg

Public tri As Boolean = False       ''Indique si on tri sur cette colonne a l'ouverture de la recherche

Property filter As TextReg
Property Read name As String


Public Sub _new(Clef As Variant, Nom As String)

  If TypeOf(Clef) = gb.String Then
    $clef = Clef
  Else If TypeOf(Clef) = gb.Object Then
    If Object.Type(Clef) = "ResultField" Then
      $clef = Clef.Name
    Else
      Message.Error("Object property non supporté")
    Endif
  Else
    Message.Error("Object property non supporté")
  Endif
  
  $nom = Nom

End

Public Sub AddChamp(nom As String, propriete As String, Optional frm As String)      ''Ajout d'une propriété, frm prend les valeurs de format nombres et dates ou le nombre de décimales après la virgule, jusqu'a 3
  
  Dim elem As New Elements
  
  elem.nom = nom
  elem.propriete = propriete
  elem.frm = frm
  $elem.Add(elem)
  
End

Public Sub AppProp(obj As Object)    ''applique les propriétés et format sur le champ
  
  Dim elem As Elements
  Dim i As Integer
  
    For i = 0 To $elem.Max
      elem = $elem[i]
      Object.SetProperty(obj, elem.nom, elem.propriete)
      If elem.frm Then frmt(elem.frm, obj)
    Next
  
End

Public Sub AjoutCondfilter()

  $CondFilter = New ObjProp($clef, $nom)

End

Public Sub CondFilter(nom As String, propriete As String)    ''On passe une propiété a la textreg associée 

  $CondFilter.AddChamp(nom, propriete)

End

Private Sub frmt(frm As String, obj As Object)    ''On définit le format du texte, soit date soit numérique
  
  Dim dte As LDate
  
  If frm Match "dd" Or frm Match "mm" Or frm Match "yy" Or frm Match "yyyy" Then
    dte = New LDate(obj.text)
    obj.text = Format(dte.G, frm)
  Else 
    If TypeOf(frm) = gb.String Then
      obj.text = Replace(obj.text, ".", ",")
      obj.text = Format(Val(obj.text), frm)
    Else
      obj.text = Utils.CDec(obj.text, frm)
    Endif
  Endif
  
  Catch 
    obj.text = "#Error"
    
End

Private Function name_Read() As String

  Return $clef

End

Private Function CondFilter_Read() As ObjProp

  Return $CondFilter

End

Private Function filter_Read() As TextReg
  
  Return $filter
  
End

Private Sub filter_Write(Value As TextReg)

  $filter = Value
  If IsNull($CondFilter) Then $CondFilter = New ObjProp($clef, $nom)
  $CondFilter.AddChamp("Text", $Nom)
  $CondFilter.AddChamp("Tag", $Nom)
  $CondFilter.AddChamp("Alignment", Align.Center)
  $CondFilter.AddChamp("Tooltip", $Nom & "\n Fléche du bas : Séléction")
  $CondFilter.AppProp($filter)

End
